/*
北大程序设计与算法（一）：c语言程序设计 
Week6
二维数组作为函数参数, 必须写明列数 
位运算：按位与将某些位置零，按位或将某些位置1，按位异或将某些位取反, 按位非, 左移, 右移 
*/
#include<iostream>

using namespace std;

//二维数组作为函数参数, 必须写明列数
void _2dmatrix(int a[][4], int nrow, int ncolomn)
{
	for(int i = 0; i<nrow; i++)
	{
		for(int j=0; j<ncolomn; j++)
			cout<<a[i][j]<<"  ";
		cout<<endl;
	}
}

//位运算：按位与将某些位置零，按位或将某些位置1，按位异或将某些位取反, 按位非, 左移, 右移
void bitfunc()
{
	short a = 0b0000001111001111;  //0b0000 0011 1100 1111
    a &= 0b0000000000000011; //最后两位置零, 0b0000 0000 0000 0011 
    printf("%d\n", a);  //3
    a |= 0b0000000000001100; //倒数3,4位置1, 0b0000 0000 0000 1111 
    printf("%d\n", a);  //15
    a ^= 0b0000000000000110;  //倒数2,3位置取反, 0b0000 0000 0000 1001
    printf("%d\n", a);  //9
    a<<=3;  //左移三位, 乘8
    printf("%d\n", a);  //72
    a>>=3;  //右移三位, 除以8, 0b0000 0000 0000 1001
	printf("%d\n", a);  //9
	a=~a; //按位取反，0b1111 1111 1111 0110 -- 0b1000 0000 0000 1001 -- 0b1000 0000 0000 1010: -10
	printf("%d\n", a);  //-10
	int b = -10;
	b>>=3; 
	printf("%d\n", b);  //向小取整, -2 
} 

int main()
{
	bitfunc();
	int a[3][4] = {{0,1,2,3},{4,5,6,7},{8,9,10,11}};
	_2dmatrix(a, 3, 4);
	return 0;
}
